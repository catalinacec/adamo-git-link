# FROM node:20-alpine AS builder

# WORKDIR /app

# RUN apk add --no-cache zip

# COPY . .

# RUN npm ci
# RUN npm run build:lambda

# # âœ… Copiar locales y templates a rutas correctas
# RUN mkdir -p dist/i18n templates && \
#     cp -r src/i18n/locales dist/i18n/locales && \
#     cp -R src/application/services/templates/* templates/

# # ðŸ“¦ Preparar carpeta deploy y empaquetar
# RUN rm -rf deploy lambda.js && \
#     mkdir -p deploy && \
#     cp -r dist/* deploy/ && \
#     cp package.json deploy/ && \
#     cd deploy && npm install --omit=dev && cd .. && \
#     cp dist/lambda.js lambda.js && \
#     zip -r lambda.zip lambda.js templates package.json node_modules deploy

# ----------------------------------------------------------------------

# FROM node:20-alpine AS builder

# WORKDIR /app

# RUN apk add --no-cache zip

# COPY . .

# RUN npm ci
# RUN npm run build:lambda

# # âœ… Copiar locales y templates a rutas correctas
# RUN mkdir -p dist/i18n templates && \
#     cp -r src/i18n/locales dist/i18n/locales && \
#     cp -R src/application/services/templates/* templates/

# # ðŸ“¦ Preparar carpeta deploy y empaquetar
# RUN rm -rf deploy lambda.js && \
#     mkdir -p deploy && \
#     cp -r dist/* deploy/ && \
#     cp package.json deploy/ && \
#     cd deploy && npm install --omit=dev && cd .. && \
#     cp dist/lambda.js lambda.js && \
#     zip -r lambda.zip lambda.js templates package.json node_modules deploy

# Dockerfile.build
FROM node:20-alpine AS builder

WORKDIR /app
RUN apk add --no-cache zip

# Copiamos todo el cÃ³digo y dependencias
COPY package*.json ./
RUN npm ci

COPY . .

# ConstrucciÃ³n especÃ­fica para Lambda
RUN npm run build:lambda

# Copiamos certificados, locales y templates tal como lo definiste
RUN mkdir -p dist/i18n templates && \
    cp -r src/i18n/locales dist/i18n/locales && \
    cp -R src/application/services/templates/* templates/

# Preparamos el ZIP final para Lambda
RUN rm -rf deploy lambda.js && \
    mkdir deploy && \
    cp -r dist/* deploy/ && \
    cp package.json deploy/ && \
    cd deploy && npm install --omit=dev && cd .. && \
    cp dist/lambda.js lambda.js && \
    zip -r lambda.zip lambda.js templates package.json node_modules deploy
